#N canvas 334 289 666 505 10;
#X msg 139 267 list one two three four;
#X obj 139 365 bng 15 250 50 0 empty empty empty 0 -6 0 10 -262144
-1 -1;
#X text 160 366 bang when done or index out of range;
#X floatatom 98 151 5 0 0 0 - - -;
#X msg 81 104 bang;
#N canvas 0 0 450 300 show 0;
#X obj 47 38 inlet;
#X obj 47 115 outlet;
#X obj 47 62 list prepend set;
#X obj 47 85 list trim;
#X connect 0 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 1 0;
#X restore 81 403 pd show;
#X msg 81 424;
#X msg 89 381 bang;
#X msg 165 312 0 1 2 3 4 5 6 7 8 9;
#X msg 151 290 twenty three 23;
#X text 322 267 Set list to seek (will also do a rewind);
#X text 75 45 walk through a list element by element - similar to [textfile]
and [qlist].;
#X text 142 149 output item by index number (zero-based \, only positive)
;
#X text 63 461 2007 Hans-Christoph Steiner \, Frank Barknecht;
#X msg 129 221 set;
#X msg 121 200 set \$1;
#X floatatom 121 180 5 0 0 0 - - -;
#X text 175 223 just "set" is "set 0" (rewind);
#X text 173 200 set start position without output;
#X obj 81 334 list-seek;
#X text 130 103 output one item and move to the next (takes off \,
where the last float \, set or bang message was);
#X text 63 19 [list-seek];
#N canvas 324 88 739 396 example 0;
#X msg 203 170 0;
#X obj 145 140 list-seek;
#X obj 63 152 delay;
#X obj 78 184 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 203 196 spigot;
#X obj 240 26 tgl 32 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 145 71 select 1;
#X obj 145 92 t b b;
#X obj 63 333 dac~;
#X obj 64 309 *~ 0;
#X obj 101 309 dbtorms;
#X obj 104 286 hsl 128 15 0 100 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 10800 1;
#X text 261 171 Caution: may generate stack overflows when [list-seek]
is uninitialized!;
#X obj 219 141 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X floatatom 93 105 5 0 0 0 - - -;
#N canvas 0 0 397 287 plong~ 0;
#X obj 112 142 vline~;
#X obj 112 221 *~;
#X obj 112 245 outlet~;
#X obj 112 54 inlet;
#X obj 127 200 osc~ 220;
#X obj 113 168 *~;
#X msg 112 113 1 3 \, 0 100 20;
#X obj 112 78 t b a;
#X obj 215 112 mtof;
#X connect 0 0 5 0;
#X connect 0 0 5 1;
#X connect 1 0 2 0;
#X connect 3 0 7 0;
#X connect 4 0 1 1;
#X connect 5 0 1 0;
#X connect 6 0 0 0;
#X connect 7 0 6 0;
#X connect 7 1 8 0;
#X connect 8 0 4 0;
#X restore 63 263 pd plong~;
#X obj 63 130 * 120;
#X msg 63 240 60;
#X msg 203 115 0 2 2 1 2 2 2 1;
#X connect 0 0 4 0;
#X connect 1 0 16 0;
#X connect 1 1 0 0;
#X connect 1 1 13 0;
#X connect 2 0 3 0;
#X connect 2 0 1 0;
#X connect 2 0 17 0;
#X connect 4 0 1 0;
#X connect 5 0 4 1;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 7 0 1 0;
#X connect 7 1 18 0;
#X connect 9 0 8 0;
#X connect 9 0 8 1;
#X connect 10 0 9 1;
#X connect 11 0 10 0;
#X connect 14 0 16 1;
#X connect 15 0 9 0;
#X connect 16 0 2 0;
#X connect 17 0 15 0;
#X connect 18 0 1 1;
#X restore 265 407 pd example;
#X connect 0 0 19 1;
#X connect 3 0 19 0;
#X connect 4 0 19 0;
#X connect 5 0 6 0;
#X connect 7 0 5 0;
#X connect 8 0 19 1;
#X connect 9 0 19 1;
#X connect 14 0 19 0;
#X connect 15 0 19 0;
#X connect 16 0 15 0;
#X connect 19 0 5 0;
#X connect 19 1 1 0;
